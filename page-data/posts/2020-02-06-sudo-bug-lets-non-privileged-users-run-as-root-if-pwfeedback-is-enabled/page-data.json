{"componentChunkName":"component---src-templates-blog-post-index-jsx","path":"/posts/2020-02-06-sudo-bug-lets-non-privileged-users-run-as-root-if-pwfeedback-is-enabled","result":{"data":{"mdx":{"id":"e9f14583-4faf-5782-b3ac-dbd5d0e26343","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Sudo bug lets non-privileged users run as root if pwfeedback is enabled\",\n  \"author\": \"Spenser Jones\",\n  \"tags\": [\"security\", \"bug\", \"vulnerability\", \"sudo\"],\n  \"date\": \"2020-02-06T09:47-07:00\",\n  \"published\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A new vulnerability in Sudo has been discovered, allowing non-privileged users to execute arbitrary commands as 'root' if the environment is configured with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pwfeedback\"), \". This was discovered by Joe Vennix of Apple Information Security, who also discovered a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.sudo.ws/alerts/minus_1_uid.html\"\n  }), \"potential bypass of Runas user restrictions\"), \" in October of 2019, and has been assigned \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-18634\"\n  }), \"CVE-2019-18634\"), \". Most Linux distributions do not have \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pwfeedback\"), \" enabled by default, however Linux Mint and Elementary OS do, and if enabled it will provide an asterisk (*) as a visual representation of the characters that have been entered, instead of the default of displaying nothing. This bug can be reproduced by passing a large input to sudo via a pipe, causing a buffer overfow and bypassing the authorization check.\"), mdx(\"p\", null, \"This has been fixed in Sudo 1.8.31, as well as in macOS High Sierra 10.13.6, Mojave 10.14.6, Catalina 10.15.2.\"), mdx(\"h2\", null, \"Additional Reading\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.sudo.ws/alerts/pwfeedback.html\"\n  }), \"https://www.sudo.ws/alerts/pwfeedback.html\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://support.apple.com/en-in/HT210919\"\n  }), \"https://support.apple.com/en-in/HT210919\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Sudo bug lets non-privileged users run as root if pwfeedback is enabled","date":"2020-02-06T09:47-07:00"}}},"pageContext":{"slug":"/posts/2020-02-06-sudo-bug-lets-non-privileged-users-run-as-root-if-pwfeedback-is-enabled"}}}